{"ast":null,"code":"var _jsxFileName = \"/Volumes/GoogleDrive/Shared drives/MG Team Drive/MIT X-PRO/Richard/Solutions/Week13/project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './index.css';\nimport { useFormik } from 'formik'; // TODO: import useFormik from formik library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: value => {\n      alert('Hello ' + formik.values.emailField + ' ' + formik.values.pswField + ' is submitted');\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.emailField) {\n        errors.emailField = 'Field required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.emailField)) {\n        errors.emailField = 'Invalid email address';\n      }\n\n      if (!values.pswField) errors.pswField = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submitBtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/GoogleDrive/Shared drives/MG Team Drive/MIT X-PRO/Richard/Solutions/Week13/project/src/App.js"],"names":["React","useFormik","App","formik","initialValues","emailField","pswField","onSubmit","value","alert","values","validate","errors","test","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,SAAR,QAAwB,QAAxB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAC;AACZC,MAAAA,UAAU,EAAE,EADA;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KADS;AAKvBC,IAAAA,QAAQ,EAAEC,KAAK,IAAG;AAChBC,MAAAA,KAAK,CAAC,WAAWN,MAAM,CAACO,MAAP,CAAcL,UAAzB,GAAsC,GAAtC,GAA4CF,MAAM,CAACO,MAAP,CAAcJ,QAA1D,GAAqE,eAAtE,CAAL;AACD,KAPsB;AAQzBK,IAAAA,QAAQ,EAAED,MAAM,IAAI;AAClB,UAAIE,MAAM,GAAG,EAAb;;AACA,UAAI,CAACF,MAAM,CAACL,UAAZ,EAAwB;AACtBO,QAAAA,MAAM,CAACP,UAAP,GAAoB,gBAApB;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CQ,IAA5C,CAAiDV,MAAM,CAACO,MAAP,CAAcL,UAA/D,CAAL,EAAiF;AACtFO,QAAAA,MAAM,CAACP,UAAP,GAAoB,uBAApB;AACD;;AACD,UAAI,CAACK,MAAM,CAACJ,QAAZ,EAAsBM,MAAM,CAACN,QAAP,GAAkB,gBAAlB;AACtB,aAAOM,MAAP;AACD;AAjBwB,GAAD,CAAxB;AAmBA,sBACE;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAET,MAAM,CAACW,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEX,MAAM,CAACY,YAAtD;AAAoE,QAAA,KAAK,EAAEZ,MAAM,CAACO,MAAP,CAAcL;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,MAAM,CAACS,MAAP,CAAcP,UAAd,gBAA2B;AAAK,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,kBAA4Bb,MAAM,CAACS,MAAP,CAAcP;AAA1C;AAAA;AAAA;AAAA;AAAA,cAA3B,GAAwF,IAH3F,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEF,MAAM,CAACY,YAApD;AAAkE,QAAA,KAAK,EAAEZ,MAAM,CAACO,MAAP,CAAcJ;AAAvF;AAAA;AAAA;AAAA;AAAA,cALF,EAMGH,MAAM,CAACS,MAAP,CAAcN,QAAd,gBAAyB;AAAK,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,kBAA4Bb,MAAM,CAACS,MAAP,CAAcN;AAA1C;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAoF,IANvF,eAOE;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlCQJ,G;UAEQD,S;;;KAFRC,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport './index.css';\r\nimport {useFormik} from 'formik'\r\n// TODO: import useFormik from formik library\r\n\r\nfunction App() {\r\n  // TODO: add a const called formik assigned to useFormik()\r\n  const formik = useFormik({\r\n    initialValues:{\r\n      emailField: '',\r\n      pswField: '',\r\n    },\r\n    onSubmit: value =>{\r\n      alert('Hello ' + formik.values.emailField + ' ' + formik.values.pswField + ' is submitted');\r\n    },\r\n  validate: values => {\r\n    let errors = {};\r\n    if (!values.emailField) {\r\n      errors.emailField = 'Field required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.emailField)) {\r\n      errors.emailField = 'Invalid email address';\r\n    }\r\n    if (!values.pswField) errors.pswField = 'Field required';\r\n    return errors;\r\n  }\r\n  });\r\n  return (\r\n    <div>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>Email</div>\r\n      <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\r\n      {formik.errors.emailField ? <div style={{color:'red'}}>{formik.errors.emailField}</div>: null}\r\n      <div>Password</div>\r\n      <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\r\n      {formik.errors.pswField ? <div style={{color:'red'}}>{formik.errors.pswField}</div>: null}\r\n      <button type=\"submitBtn\">Submit</button> \r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}